/**
 * API dos Correios
 * API de rastreios de Objetos Postais
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.ObjetosEventos;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Postal Object model
 **/
@ApiModel(description = "Postal Object model")
public class InlineResponse2002 {
  
  @SerializedName("numero")
  private String numero = null;
  @SerializedName("eventos")
  private List<ObjetosEventos> eventos = null;

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public String getNumero() {
    return numero;
  }
  public void setNumero(String numero) {
    this.numero = numero;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<ObjetosEventos> getEventos() {
    return eventos;
  }
  public void setEventos(List<ObjetosEventos> eventos) {
    this.eventos = eventos;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2002 inlineResponse2002 = (InlineResponse2002) o;
    return (this.numero == null ? inlineResponse2002.numero == null : this.numero.equals(inlineResponse2002.numero)) &&
        (this.eventos == null ? inlineResponse2002.eventos == null : this.eventos.equals(inlineResponse2002.eventos));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.numero == null ? 0: this.numero.hashCode());
    result = 31 * result + (this.eventos == null ? 0: this.eventos.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2002 {\n");
    
    sb.append("  numero: ").append(numero).append("\n");
    sb.append("  eventos: ").append(eventos).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
