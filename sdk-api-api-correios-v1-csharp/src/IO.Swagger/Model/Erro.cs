/* 
 * API dos Correios
 *
 * API de rastreios de Objetos Postais
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Erro
    /// </summary>
    [DataContract]
    public partial class Erro :  IEquatable<Erro>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Erro" /> class.
        /// </summary>
        /// <param name="Resultado">Resultado.</param>
        /// <param name="Status">Status.</param>
        /// <param name="Detalhes">Detalhes.</param>
        public Erro(string Resultado = default(string), string Status = default(string), string Detalhes = default(string))
        {
            this.Resultado = Resultado;
            this.Status = Status;
            this.Detalhes = Detalhes;
        }
        
        /// <summary>
        /// Gets or Sets Resultado
        /// </summary>
        [DataMember(Name="resultado", EmitDefaultValue=false)]
        public string Resultado { get; set; }
        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public string Status { get; set; }
        /// <summary>
        /// Gets or Sets Detalhes
        /// </summary>
        [DataMember(Name="detalhes", EmitDefaultValue=false)]
        public string Detalhes { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Erro {\n");
            sb.Append("  Resultado: ").Append(Resultado).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Detalhes: ").Append(Detalhes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as Erro);
        }

        /// <summary>
        /// Returns true if Erro instances are equal
        /// </summary>
        /// <param name="other">Instance of Erro to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Erro other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Resultado == other.Resultado ||
                    this.Resultado != null &&
                    this.Resultado.Equals(other.Resultado)
                ) && 
                (
                    this.Status == other.Status ||
                    this.Status != null &&
                    this.Status.Equals(other.Status)
                ) && 
                (
                    this.Detalhes == other.Detalhes ||
                    this.Detalhes != null &&
                    this.Detalhes.Equals(other.Detalhes)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Resultado != null)
                    hash = hash * 59 + this.Resultado.GetHashCode();
                if (this.Status != null)
                    hash = hash * 59 + this.Status.GetHashCode();
                if (this.Detalhes != null)
                    hash = hash * 59 + this.Detalhes.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
