/**
 * API do Futebolcard
 * Futebolcard manipulation API
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.InlineResponse2001Map;
import io.swagger.client.model.InlineResponse2002Subsectors;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class InlineResponse2002 {
  
  @SerializedName("subsectors")
  private List<InlineResponse2002Subsectors> subsectors = null;
  @SerializedName("map")
  private InlineResponse2001Map map = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public List<InlineResponse2002Subsectors> getSubsectors() {
    return subsectors;
  }
  public void setSubsectors(List<InlineResponse2002Subsectors> subsectors) {
    this.subsectors = subsectors;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public InlineResponse2001Map getMap() {
    return map;
  }
  public void setMap(InlineResponse2001Map map) {
    this.map = map;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2002 inlineResponse2002 = (InlineResponse2002) o;
    return (this.subsectors == null ? inlineResponse2002.subsectors == null : this.subsectors.equals(inlineResponse2002.subsectors)) &&
        (this.map == null ? inlineResponse2002.map == null : this.map.equals(inlineResponse2002.map));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.subsectors == null ? 0: this.subsectors.hashCode());
    result = 31 * result + (this.map == null ? 0: this.map.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2002 {\n");
    
    sb.append("  subsectors: ").append(subsectors).append("\n");
    sb.append("  map: ").append(map).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
