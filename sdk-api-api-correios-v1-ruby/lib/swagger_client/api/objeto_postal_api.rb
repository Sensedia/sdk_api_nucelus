=begin
#API dos Correios

#API de rastreios de Objetos Postais

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require "uri"

module SwaggerClient
  class ObjetoPostalApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # 
    # Retorna uma lista de possiveis status para um determinado evento.
    # @param client_id Identificação do cliente usado na autenticação.
    # @param access_token Access token usado na autenticação.
    # @param tipo_evento Tipo de evento a ser pesquisado.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :status_evento Status a ser filtrado.
    # @return [Array<InlineResponse2003>]
    def eventos_tipo_evento_get(client_id, access_token, tipo_evento, opts = {})
      data, _status_code, _headers = eventos_tipo_evento_get_with_http_info(client_id, access_token, tipo_evento, opts)
      return data
    end

    # 
    # Retorna uma lista de possiveis status para um determinado evento.
    # @param client_id Identificação do cliente usado na autenticação.
    # @param access_token Access token usado na autenticação.
    # @param tipo_evento Tipo de evento a ser pesquisado.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :status_evento Status a ser filtrado.
    # @return [Array<(Array<InlineResponse2003>, Fixnum, Hash)>] Array<InlineResponse2003> data, response status code and response headers
    def eventos_tipo_evento_get_with_http_info(client_id, access_token, tipo_evento, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ObjetoPostalApi.eventos_tipo_evento_get ..."
      end
      # verify the required parameter 'client_id' is set
      fail ArgumentError, "Missing the required parameter 'client_id' when calling ObjetoPostalApi.eventos_tipo_evento_get" if client_id.nil?
      # verify the required parameter 'access_token' is set
      fail ArgumentError, "Missing the required parameter 'access_token' when calling ObjetoPostalApi.eventos_tipo_evento_get" if access_token.nil?
      # verify the required parameter 'tipo_evento' is set
      fail ArgumentError, "Missing the required parameter 'tipo_evento' when calling ObjetoPostalApi.eventos_tipo_evento_get" if tipo_evento.nil?
      # resource path
      local_var_path = "/eventos/{tipoEvento}".sub('{format}','json').sub('{' + 'tipoEvento' + '}', tipo_evento.to_s)

      # query parameters
      query_params = {}
      query_params[:'statusEvento'] = opts[:'status_evento'] if !opts[:'status_evento'].nil?

      # header parameters
      header_params = {}
      header_params[:'client_id'] = client_id
      header_params[:'access_token'] = access_token

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<InlineResponse2003>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ObjetoPostalApi#eventos_tipo_evento_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # Pesquisa por informações relacionadas a um objeto postal especifico.
    # @param client_id Identificação do cliente usado na autenticação.
    # @param access_token Access token usado na autenticação.
    # @param codigo_objeto Codigo do objeto a ser pesquisado.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :tipo_evento Tipo de evento a ser filtrado.
    # @return [Array<ObjetosEventos>]
    def objetos_codigo_objeto_get(client_id, access_token, codigo_objeto, opts = {})
      data, _status_code, _headers = objetos_codigo_objeto_get_with_http_info(client_id, access_token, codigo_objeto, opts)
      return data
    end

    # 
    # Pesquisa por informações relacionadas a um objeto postal especifico.
    # @param client_id Identificação do cliente usado na autenticação.
    # @param access_token Access token usado na autenticação.
    # @param codigo_objeto Codigo do objeto a ser pesquisado.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :tipo_evento Tipo de evento a ser filtrado.
    # @return [Array<(Array<ObjetosEventos>, Fixnum, Hash)>] Array<ObjetosEventos> data, response status code and response headers
    def objetos_codigo_objeto_get_with_http_info(client_id, access_token, codigo_objeto, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ObjetoPostalApi.objetos_codigo_objeto_get ..."
      end
      # verify the required parameter 'client_id' is set
      fail ArgumentError, "Missing the required parameter 'client_id' when calling ObjetoPostalApi.objetos_codigo_objeto_get" if client_id.nil?
      # verify the required parameter 'access_token' is set
      fail ArgumentError, "Missing the required parameter 'access_token' when calling ObjetoPostalApi.objetos_codigo_objeto_get" if access_token.nil?
      # verify the required parameter 'codigo_objeto' is set
      fail ArgumentError, "Missing the required parameter 'codigo_objeto' when calling ObjetoPostalApi.objetos_codigo_objeto_get" if codigo_objeto.nil?
      # resource path
      local_var_path = "/objetos/{codigoObjeto}".sub('{format}','json').sub('{' + 'codigoObjeto' + '}', codigo_objeto.to_s)

      # query parameters
      query_params = {}
      query_params[:'tipoEvento'] = opts[:'tipo_evento'] if !opts[:'tipo_evento'].nil?

      # header parameters
      header_params = {}
      header_params[:'client_id'] = client_id
      header_params[:'access_token'] = access_token

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<ObjetosEventos>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ObjetoPostalApi#objetos_codigo_objeto_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # Pesquisa por informações relacionados a uma lista de objetos postais.
    # @param client_id Identificação do cliente usado na autenticação.
    # @param access_token Access token usado na autenticação.
    # @param codigo_objeto Lista, separada por virgula, com codigos de objetos postais.
    # @param [Hash] opts the optional parameters
    # @return [Array<InlineResponse2002>]
    def objetos_get(client_id, access_token, codigo_objeto, opts = {})
      data, _status_code, _headers = objetos_get_with_http_info(client_id, access_token, codigo_objeto, opts)
      return data
    end

    # 
    # Pesquisa por informações relacionados a uma lista de objetos postais.
    # @param client_id Identificação do cliente usado na autenticação.
    # @param access_token Access token usado na autenticação.
    # @param codigo_objeto Lista, separada por virgula, com codigos de objetos postais.
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<InlineResponse2002>, Fixnum, Hash)>] Array<InlineResponse2002> data, response status code and response headers
    def objetos_get_with_http_info(client_id, access_token, codigo_objeto, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ObjetoPostalApi.objetos_get ..."
      end
      # verify the required parameter 'client_id' is set
      fail ArgumentError, "Missing the required parameter 'client_id' when calling ObjetoPostalApi.objetos_get" if client_id.nil?
      # verify the required parameter 'access_token' is set
      fail ArgumentError, "Missing the required parameter 'access_token' when calling ObjetoPostalApi.objetos_get" if access_token.nil?
      # verify the required parameter 'codigo_objeto' is set
      fail ArgumentError, "Missing the required parameter 'codigo_objeto' when calling ObjetoPostalApi.objetos_get" if codigo_objeto.nil?
      # resource path
      local_var_path = "/objetos".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'codigoObjeto'] = codigo_objeto

      # header parameters
      header_params = {}
      header_params[:'client_id'] = client_id
      header_params[:'access_token'] = access_token

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<InlineResponse2002>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ObjetoPostalApi#objetos_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
