# coding: utf-8

"""
    API dos Correios

    API de rastreios de Objetos Postais

    OpenAPI spec version: 1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class ObjetosEventos(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, codigo_objeto=None, tipo_evento=None, status_evento=None, descricao_evento=None, nome_unidade=None, codigo_sro=None, municipio=None, uf=None, codigo_mcu=None, codigo_dr=None, sigla_dr=None, numero_lista=None, estacao=None, usuario=None, data_gravacao=None, entregador=None, data_criacao=None, acao_bloqueio=None):
        """
        ObjetosEventos - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'codigo_objeto': 'str',
            'tipo_evento': 'str',
            'status_evento': 'int',
            'descricao_evento': 'str',
            'nome_unidade': 'str',
            'codigo_sro': 'str',
            'municipio': 'str',
            'uf': 'str',
            'codigo_mcu': 'str',
            'codigo_dr': 'str',
            'sigla_dr': 'str',
            'numero_lista': 'str',
            'estacao': 'int',
            'usuario': 'str',
            'data_gravacao': 'str',
            'entregador': 'str',
            'data_criacao': 'str',
            'acao_bloqueio': 'int'
        }

        self.attribute_map = {
            'codigo_objeto': 'codigoObjeto',
            'tipo_evento': 'tipoEvento',
            'status_evento': 'statusEvento',
            'descricao_evento': 'descricaoEvento',
            'nome_unidade': 'nomeUnidade',
            'codigo_sro': 'codigoSRO',
            'municipio': 'municipio',
            'uf': 'uf',
            'codigo_mcu': 'codigoMCU',
            'codigo_dr': 'codigoDR',
            'sigla_dr': 'siglaDR',
            'numero_lista': 'numeroLista',
            'estacao': 'estacao',
            'usuario': 'usuario',
            'data_gravacao': 'dataGravacao',
            'entregador': 'entregador',
            'data_criacao': 'dataCriacao',
            'acao_bloqueio': 'acaoBloqueio'
        }

        self._codigo_objeto = codigo_objeto
        self._tipo_evento = tipo_evento
        self._status_evento = status_evento
        self._descricao_evento = descricao_evento
        self._nome_unidade = nome_unidade
        self._codigo_sro = codigo_sro
        self._municipio = municipio
        self._uf = uf
        self._codigo_mcu = codigo_mcu
        self._codigo_dr = codigo_dr
        self._sigla_dr = sigla_dr
        self._numero_lista = numero_lista
        self._estacao = estacao
        self._usuario = usuario
        self._data_gravacao = data_gravacao
        self._entregador = entregador
        self._data_criacao = data_criacao
        self._acao_bloqueio = acao_bloqueio

    @property
    def codigo_objeto(self):
        """
        Gets the codigo_objeto of this ObjetosEventos.
        

        :return: The codigo_objeto of this ObjetosEventos.
        :rtype: str
        """
        return self._codigo_objeto

    @codigo_objeto.setter
    def codigo_objeto(self, codigo_objeto):
        """
        Sets the codigo_objeto of this ObjetosEventos.
        

        :param codigo_objeto: The codigo_objeto of this ObjetosEventos.
        :type: str
        """

        self._codigo_objeto = codigo_objeto

    @property
    def tipo_evento(self):
        """
        Gets the tipo_evento of this ObjetosEventos.
        

        :return: The tipo_evento of this ObjetosEventos.
        :rtype: str
        """
        return self._tipo_evento

    @tipo_evento.setter
    def tipo_evento(self, tipo_evento):
        """
        Sets the tipo_evento of this ObjetosEventos.
        

        :param tipo_evento: The tipo_evento of this ObjetosEventos.
        :type: str
        """

        self._tipo_evento = tipo_evento

    @property
    def status_evento(self):
        """
        Gets the status_evento of this ObjetosEventos.
        

        :return: The status_evento of this ObjetosEventos.
        :rtype: int
        """
        return self._status_evento

    @status_evento.setter
    def status_evento(self, status_evento):
        """
        Sets the status_evento of this ObjetosEventos.
        

        :param status_evento: The status_evento of this ObjetosEventos.
        :type: int
        """

        self._status_evento = status_evento

    @property
    def descricao_evento(self):
        """
        Gets the descricao_evento of this ObjetosEventos.
        

        :return: The descricao_evento of this ObjetosEventos.
        :rtype: str
        """
        return self._descricao_evento

    @descricao_evento.setter
    def descricao_evento(self, descricao_evento):
        """
        Sets the descricao_evento of this ObjetosEventos.
        

        :param descricao_evento: The descricao_evento of this ObjetosEventos.
        :type: str
        """

        self._descricao_evento = descricao_evento

    @property
    def nome_unidade(self):
        """
        Gets the nome_unidade of this ObjetosEventos.
        

        :return: The nome_unidade of this ObjetosEventos.
        :rtype: str
        """
        return self._nome_unidade

    @nome_unidade.setter
    def nome_unidade(self, nome_unidade):
        """
        Sets the nome_unidade of this ObjetosEventos.
        

        :param nome_unidade: The nome_unidade of this ObjetosEventos.
        :type: str
        """

        self._nome_unidade = nome_unidade

    @property
    def codigo_sro(self):
        """
        Gets the codigo_sro of this ObjetosEventos.
        

        :return: The codigo_sro of this ObjetosEventos.
        :rtype: str
        """
        return self._codigo_sro

    @codigo_sro.setter
    def codigo_sro(self, codigo_sro):
        """
        Sets the codigo_sro of this ObjetosEventos.
        

        :param codigo_sro: The codigo_sro of this ObjetosEventos.
        :type: str
        """

        self._codigo_sro = codigo_sro

    @property
    def municipio(self):
        """
        Gets the municipio of this ObjetosEventos.
        

        :return: The municipio of this ObjetosEventos.
        :rtype: str
        """
        return self._municipio

    @municipio.setter
    def municipio(self, municipio):
        """
        Sets the municipio of this ObjetosEventos.
        

        :param municipio: The municipio of this ObjetosEventos.
        :type: str
        """

        self._municipio = municipio

    @property
    def uf(self):
        """
        Gets the uf of this ObjetosEventos.
        

        :return: The uf of this ObjetosEventos.
        :rtype: str
        """
        return self._uf

    @uf.setter
    def uf(self, uf):
        """
        Sets the uf of this ObjetosEventos.
        

        :param uf: The uf of this ObjetosEventos.
        :type: str
        """

        self._uf = uf

    @property
    def codigo_mcu(self):
        """
        Gets the codigo_mcu of this ObjetosEventos.
        

        :return: The codigo_mcu of this ObjetosEventos.
        :rtype: str
        """
        return self._codigo_mcu

    @codigo_mcu.setter
    def codigo_mcu(self, codigo_mcu):
        """
        Sets the codigo_mcu of this ObjetosEventos.
        

        :param codigo_mcu: The codigo_mcu of this ObjetosEventos.
        :type: str
        """

        self._codigo_mcu = codigo_mcu

    @property
    def codigo_dr(self):
        """
        Gets the codigo_dr of this ObjetosEventos.
        

        :return: The codigo_dr of this ObjetosEventos.
        :rtype: str
        """
        return self._codigo_dr

    @codigo_dr.setter
    def codigo_dr(self, codigo_dr):
        """
        Sets the codigo_dr of this ObjetosEventos.
        

        :param codigo_dr: The codigo_dr of this ObjetosEventos.
        :type: str
        """

        self._codigo_dr = codigo_dr

    @property
    def sigla_dr(self):
        """
        Gets the sigla_dr of this ObjetosEventos.
        

        :return: The sigla_dr of this ObjetosEventos.
        :rtype: str
        """
        return self._sigla_dr

    @sigla_dr.setter
    def sigla_dr(self, sigla_dr):
        """
        Sets the sigla_dr of this ObjetosEventos.
        

        :param sigla_dr: The sigla_dr of this ObjetosEventos.
        :type: str
        """

        self._sigla_dr = sigla_dr

    @property
    def numero_lista(self):
        """
        Gets the numero_lista of this ObjetosEventos.
        

        :return: The numero_lista of this ObjetosEventos.
        :rtype: str
        """
        return self._numero_lista

    @numero_lista.setter
    def numero_lista(self, numero_lista):
        """
        Sets the numero_lista of this ObjetosEventos.
        

        :param numero_lista: The numero_lista of this ObjetosEventos.
        :type: str
        """

        self._numero_lista = numero_lista

    @property
    def estacao(self):
        """
        Gets the estacao of this ObjetosEventos.
        

        :return: The estacao of this ObjetosEventos.
        :rtype: int
        """
        return self._estacao

    @estacao.setter
    def estacao(self, estacao):
        """
        Sets the estacao of this ObjetosEventos.
        

        :param estacao: The estacao of this ObjetosEventos.
        :type: int
        """

        self._estacao = estacao

    @property
    def usuario(self):
        """
        Gets the usuario of this ObjetosEventos.
        

        :return: The usuario of this ObjetosEventos.
        :rtype: str
        """
        return self._usuario

    @usuario.setter
    def usuario(self, usuario):
        """
        Sets the usuario of this ObjetosEventos.
        

        :param usuario: The usuario of this ObjetosEventos.
        :type: str
        """

        self._usuario = usuario

    @property
    def data_gravacao(self):
        """
        Gets the data_gravacao of this ObjetosEventos.
        

        :return: The data_gravacao of this ObjetosEventos.
        :rtype: str
        """
        return self._data_gravacao

    @data_gravacao.setter
    def data_gravacao(self, data_gravacao):
        """
        Sets the data_gravacao of this ObjetosEventos.
        

        :param data_gravacao: The data_gravacao of this ObjetosEventos.
        :type: str
        """

        self._data_gravacao = data_gravacao

    @property
    def entregador(self):
        """
        Gets the entregador of this ObjetosEventos.
        

        :return: The entregador of this ObjetosEventos.
        :rtype: str
        """
        return self._entregador

    @entregador.setter
    def entregador(self, entregador):
        """
        Sets the entregador of this ObjetosEventos.
        

        :param entregador: The entregador of this ObjetosEventos.
        :type: str
        """

        self._entregador = entregador

    @property
    def data_criacao(self):
        """
        Gets the data_criacao of this ObjetosEventos.
        

        :return: The data_criacao of this ObjetosEventos.
        :rtype: str
        """
        return self._data_criacao

    @data_criacao.setter
    def data_criacao(self, data_criacao):
        """
        Sets the data_criacao of this ObjetosEventos.
        

        :param data_criacao: The data_criacao of this ObjetosEventos.
        :type: str
        """

        self._data_criacao = data_criacao

    @property
    def acao_bloqueio(self):
        """
        Gets the acao_bloqueio of this ObjetosEventos.
        

        :return: The acao_bloqueio of this ObjetosEventos.
        :rtype: int
        """
        return self._acao_bloqueio

    @acao_bloqueio.setter
    def acao_bloqueio(self, acao_bloqueio):
        """
        Sets the acao_bloqueio of this ObjetosEventos.
        

        :param acao_bloqueio: The acao_bloqueio of this ObjetosEventos.
        :type: int
        """

        self._acao_bloqueio = acao_bloqueio

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, ObjetosEventos):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
