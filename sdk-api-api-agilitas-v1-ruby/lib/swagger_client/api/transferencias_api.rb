=begin
#API Agillitas Cartões Pré-pagos

#API para manipular recursos relacionadas à cartões pré-pagos Agillitas.

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require "uri"

module SwaggerClient
  class TransferenciasApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Cadastro de beneficiário
    # <p>Permite o cadastro de beneficiário para uma transferencia.</p>
    # @param beneficiario Objeto de requisição
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def transferencias_cadastros_post(beneficiario, opts = {})
      transferencias_cadastros_post_with_http_info(beneficiario, opts)
      return nil
    end

    # Cadastro de beneficiário
    # &lt;p&gt;Permite o cadastro de beneficiário para uma transferencia.&lt;/p&gt;
    # @param beneficiario Objeto de requisição
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def transferencias_cadastros_post_with_http_info(beneficiario, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: TransferenciasApi.transferencias_cadastros_post ..."
      end
      # verify the required parameter 'beneficiario' is set
      fail ArgumentError, "Missing the required parameter 'beneficiario' when calling TransferenciasApi.transferencias_cadastros_post" if beneficiario.nil?
      # resource path
      local_var_path = "/transferencias/cadastros".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(beneficiario)
      auth_names = ['access_token', 'key_id', 'client_id']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TransferenciasApi#transferencias_cadastros_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Transferência de valor
    # <p>Permite a transferência de valor entre dois cartões pré cadastrados.</p>
    # @param transferencia Objeto de requisição
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def transferencias_post(transferencia, opts = {})
      transferencias_post_with_http_info(transferencia, opts)
      return nil
    end

    # Transferência de valor
    # &lt;p&gt;Permite a transferência de valor entre dois cartões pré cadastrados.&lt;/p&gt;
    # @param transferencia Objeto de requisição
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def transferencias_post_with_http_info(transferencia, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: TransferenciasApi.transferencias_post ..."
      end
      # verify the required parameter 'transferencia' is set
      fail ArgumentError, "Missing the required parameter 'transferencia' when calling TransferenciasApi.transferencias_post" if transferencia.nil?
      # resource path
      local_var_path = "/transferencias".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(transferencia)
      auth_names = ['access_token', 'key_id', 'client_id']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TransferenciasApi#transferencias_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
